Relational Database using ER to Relational mapping

Step 1: Mapping Regular Entity Types:
	-- For each regular entity type E in ER schema, create a relation R that includes all the simple attributes of E.
	-- Include only the simple component attributes of a composite attribute,
	-- Choose one of the key attributes of E as the primary key for R. If the chosen key attribute is a part of the composite attribute then the set of simple attributes will together form the primary key.
	-- The relations that are created from the maping of entity types are sometimes called entity relations.

Step 2: Mapping of Weak Entity Types:
	-- For each weak entity type W in the ER schema with the owner entity type E, create a relation R.
	-- Include as foreign key attributes of R, the primay key attributes of the owner entity types.
	-- The primary key of R is the combination of the primary keys of the owners and the partial key of the weak entity type W, if any.
	-- If there is a weak entity E2 whose owner entity is also a weak entity E1, then E1 must be mapped before E2 is mapped to determine its primary key.

Step 3: Mapping a 1:1 Binary Relations:
	-- For each binary 1:1 relationship in the ER schema, identify the relations S and T that corresponds to the entity types participating in R.
	-- There are three possible approaches but the first approach is the most useful and should be followed unless special conditions exist.
	1. Foreign Key approach:
		-- Choose one of the relations, say S, and include as a foreign key in the S the primary key of T. 
		-- It is better to choose an entity type that has total participation.
		-- Include all the simple attributes of the relationship type as the attributes in S.

	2. Merged Relation Approach:
		-- An alternative mapping of a 1:1 relationship is to merge the participating entities and the relationship type into a single relation.
		-- This ispossible when both the participating entities have total participation as this would indicate that the two relations will have the same number of tuples at any time.

	3. Cross-reference or relationship relation approach:
		-- The third option is to set up a third relation R for the purpose of cross referencing the tuples of relations S and T. Such a relation is called a relationship relation.
		-- The drawback of this approach is requiring extra join operations when combining related tuples from tables.

Step 4:	Mapping of 1:N Binary Relations:
	There are two possible approaches. 1. The foreign key approach and 2. The cross reference or relationship relation approach. The first approach is generally preferred as it reduces the number of tables.

	1. The Foreign Key approach: 
	-- For each 1:N relationship type R identify the relation S that represents the N-side of the relationship type.
	-- Include as foreign key in S the primary key of the relation T that represents the other entity type participating in R.
	-- Include any simple attributes of the 1:N relationship type as attributes of S.

	2. The relationship relation type

Step 5: Mapping of N:M Binary Relations:
	In the traditional relational model with not multivalues attributes the only option is the relationship relation.

	-- for each binary M:N relationhipt ype R, create a new relation S to represent R.
	-- include as foreign keys the primary keys of the participating relations and their combination will form the primary key of S.

Step 6: Mapping of a multivalued attribute:
	-- For each multivalued attribute A, crete a new relation R. 
	-- This relation will include an attribute corresponding to A and the primary key attribute of the parent relation and their combination will act as the primary key of this relation.
	-- If the multivalued attribute is composite then we store the simple attributes.
